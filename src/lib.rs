#![no_std]

pub mod instructions;
pub mod states;

use pinocchio::pubkey::Pubkey;

use core::mem::MaybeUninit;

const UNINIT_BYTE: MaybeUninit<u8> = MaybeUninit::<u8>::uninit();

#[inline(always)]
fn write_bytes(destination: &mut [MaybeUninit<u8>], source: &[u8]) {
    for (d, s) in destination.iter_mut().zip(source.iter()) {
        d.write(*s);
    }
}
// DLockwT7X7sxtLmGH9g5kmfcjaBtncdbUmi738m5bvQC
// 71a7acac8d35d1ce4dadf3adebfd425c85168efccf0e596860de58fd4a54cc5b
#[cfg(feature = "devnet")]
pub const ID: Pubkey = [
    0x71, 0xa7, 0xac, 0xac, 0x8d, 0x35, 0xd1, 0xce,
    0x4d, 0xad, 0xf3, 0xad, 0xeb, 0xfd, 0x42, 0x5c,
    0x85, 0x16, 0x8e, 0xfc, 0xcf, 0x0e, 0x59, 0x68,
    0x60, 0xde, 0x58, 0xfd, 0x4a, 0x54, 0xcc, 0x5b,
];
//LockrWmn6K5twhz3y9w1dQERbmgSaRkfnTeTKbpofwE
// 09cb277962ccc30cb1745f20c226e4a863a95fb31cf2e96b504f81b6cbf4dde2
#[cfg(not(feature = "devnet"))]
pub const ID: Pubkey = [
    0x09, 0xcb, 0x27, 0x79, 0x62, 0xcc, 0xc3, 0x0c,
    0xb1, 0x74, 0x5f, 0x20, 0xc2, 0x26, 0xe4, 0xa8,
    0x63, 0xa9, 0x5f, 0xb3, 0x1c, 0xf2, 0xe9, 0x6b,
    0x50, 0x4f, 0x81, 0xb6, 0xcb, 0xf4, 0xdd, 0xe2,
];